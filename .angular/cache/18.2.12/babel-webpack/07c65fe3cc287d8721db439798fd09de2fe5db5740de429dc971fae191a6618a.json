{"ast":null,"code":"import { seatData } from '../test-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const seat_r1 = ctx.$implicit;\n    i0.ɵɵclassMap(seat_r1.isAvailable ? \"available-seat\" : \"unavailable-seat\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", seat_r1.id, \" \");\n  }\n}\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, AppComponent_div_10_div_1_Template, 2, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.seats = [];\n      this.bookedSeats = [];\n      this.totalAvailableSeats = 0;\n    }\n    ngOnInit() {\n      // seatData in production will be fetched from DB in array of Seat[] format\n      // and ith index of array represents i+1nth row\n      this.seats = seatData;\n      // Will be fetched from BE\n      this.totalAvailableSeats = this.calculateTotalAvailableSeats();\n    }\n    calculateTotalAvailableSeats() {\n      return this.seats.reduce((total, row) => total + row.filter(seat => seat.isAvailable).length, 0);\n    }\n    bookSeats(numSeats) {\n      if (numSeats <= 0) {\n        alert('Please select at least one seat to book.');\n        return;\n      }\n      if (numSeats > 7) {\n        alert(\"More than 7 seats can't be booked at once.\");\n        return;\n      }\n      if (numSeats > this.totalAvailableSeats) {\n        alert('Insufficient seats available.');\n        return;\n      }\n      const bookedSeats = [];\n      let availableSeats = [];\n      // Book seats in a single row if possible\n      for (const row of this.seats) {\n        const rowAvailableSeats = row.filter(seat => seat.isAvailable);\n        // Store all available seats\n        availableSeats.push(...rowAvailableSeats);\n        if (rowAvailableSeats.length >= numSeats) {\n          for (let i = 0; i < numSeats; i++) {\n            rowAvailableSeats[i].isAvailable = false;\n            bookedSeats.push(rowAvailableSeats[i].seatNumber);\n          }\n          // Updating total seats\n          this.totalAvailableSeats -= numSeats;\n          this.bookedSeats = bookedSeats;\n          return;\n        }\n      }\n      // Book seats across rows if not available in a single row\n      for (let i = 0; i < numSeats; i++) {\n        if (availableSeats[i]) {\n          availableSeats[i].isAvailable = false;\n          bookedSeats.push(availableSeats[i].seatNumber);\n        }\n      }\n      // Update total available seats\n      this.totalAvailableSeats -= bookedSeats.length;\n      this.bookedSeats = bookedSeats;\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AppComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"my-app\"]],\n        decls: 11,\n        vars: 3,\n        consts: [[1, \"container\"], [1, \"input-group\"], [\"type\", \"number\", \"placeholder\", \"Enter number of seats\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [1, \"seat-layout\"], [\"class\", \"seat-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"seat-row\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n            i0.ɵɵtext(2, \"Ticket Booking App\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.numSeats, $event) || (ctx.numSeats = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n              return ctx.bookSeats(ctx.numSeats);\n            });\n            i0.ɵɵtext(6, \"Book Seats\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"p\");\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 4);\n            i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 1, \"div\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.numSeats);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\"Total Available Seats: \", ctx.totalAvailableSeats, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.seats);\n          }\n        },\n        dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n        styles: [\".container[_ngcontent-%COMP%]{text-align:center;margin-top:50px}.input-group[_ngcontent-%COMP%]{margin-bottom:20px}.seat-layout[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:10px}.seat-row[_ngcontent-%COMP%]{display:flex;gap:5px}.seat-row[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{width:30px;height:30px;border:1px solid black;text-align:center;line-height:30px;border-radius:4px}.available-seat[_ngcontent-%COMP%]{background-color:green;color:#fff}.unavailable-seat[_ngcontent-%COMP%]{background-color:red;color:#fff}\"]\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}